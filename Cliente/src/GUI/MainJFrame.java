package GUI;

import Client.Client;
import Domain.User;
import java.awt.Component;
import java.awt.event.MouseMotionListener;
import java.io.IOException;
import javax.swing.JInternalFrame;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author reych
 */
public class MainJFrame extends javax.swing.JFrame {
    
    private User user;
    private Client clientSocket;

    public MainJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        gameTittle = new javax.swing.JLabel();
        passwordTittle = new javax.swing.JLabel();
        loggin = new java.awt.Button();
        userTextField = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        userTittle = new javax.swing.JLabel();
        register = new java.awt.Button();
        image = new javax.swing.JLabel();
        alert = new javax.swing.JLabel();

        label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/initBackground.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Class Royale Game");
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(700, 900));
        setPreferredSize(new java.awt.Dimension(700, 900));
        setResizable(false);

        jDesktopPane1.setBackground(new java.awt.Color(0, 0, 0));
        jDesktopPane1.setMaximumSize(new java.awt.Dimension(700, 900));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(700, 900));

        gameTittle.setFont(new java.awt.Font("Castellar", 1, 18)); // NOI18N
        gameTittle.setForeground(new java.awt.Color(0, 153, 153));
        gameTittle.setText("Clash Royale");
        jDesktopPane1.add(gameTittle);
        gameTittle.setBounds(30, 20, 221, 40);

        passwordTittle.setFont(new java.awt.Font("Castellar", 1, 18)); // NOI18N
        passwordTittle.setForeground(new java.awt.Color(255, 255, 255));
        passwordTittle.setText("Password:");
        jDesktopPane1.add(passwordTittle);
        passwordTittle.setBounds(120, 170, 150, 40);

        loggin.setBackground(new java.awt.Color(0, 102, 102));
        loggin.setFont(new java.awt.Font("Cascadia Mono", 0, 12)); // NOI18N
        loggin.setForeground(new java.awt.Color(255, 255, 255));
        loggin.setLabel("Log in");
        loggin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logInMouseClicked(evt);
            }
        });
        jDesktopPane1.add(loggin);
        loggin.setBounds(290, 220, 190, 30);

        userTextField.setFont(new java.awt.Font("Segoe Print", 0, 16)); // NOI18N
        jDesktopPane1.add(userTextField);
        userTextField.setBounds(290, 120, 190, 30);

        jPasswordField1.setFont(new java.awt.Font("Segoe Print", 0, 16)); // NOI18N
        jDesktopPane1.add(jPasswordField1);
        jPasswordField1.setBounds(290, 170, 190, 30);

        userTittle.setFont(new java.awt.Font("Castellar", 1, 18)); // NOI18N
        userTittle.setForeground(new java.awt.Color(255, 255, 255));
        userTittle.setText("User:");
        jDesktopPane1.add(userTittle);
        userTittle.setBounds(130, 110, 70, 40);

        register.setBackground(new java.awt.Color(51, 0, 51));
        register.setFont(new java.awt.Font("Cascadia Mono", 0, 12)); // NOI18N
        register.setForeground(new java.awt.Color(255, 255, 255));
        register.setLabel("Create new account");
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newAccountMouseClicked(evt);
            }
        });
        jDesktopPane1.add(register);
        register.setBounds(290, 270, 190, 30);

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/initBackground.jpg"))); // NOI18N
        jDesktopPane1.add(image);
        image.setBounds(0, 480, 700, 400);

        alert.setForeground(new java.awt.Color(255, 255, 255));
        alert.setText(" ");
        jDesktopPane1.add(alert);
        alert.setBounds(290, 70, 190, 22);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Class Royale.");
        getAccessibleContext().setAccessibleDescription("Game.");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logInMouseClicked
        /*  Display the console game*/

        //Case 1. Verificamos la informacion
        if (!this.jPasswordField1.getText().isEmpty() & !this.userTextField.getText().isEmpty()) {

            user = new User(this.userTextField.getText(), jPasswordField1.getText());
            user.setAction("loggin");
            if (clientSocket == null) {
                connectToServer();
            }
            
            // Enviamos el objeto User al servidor a través del socket
            clientSocket.sendUserToServer(user);

            // Obtenemos la respuesta del servidor y la mostramos en la interfaz gráfica
              String message = clientSocket.receiveMessageFromServer();
              this.alert.setText(message);
                            
              //Cargamos el juego
              if (message.equalsIgnoreCase("init")) {
                  disableComponents();
                                                
              }
           
        } else {
            alert.setText("Incomplete data");
        }
    }//GEN-LAST:event_logInMouseClicked

    //visualizar el JFrameInternal para el registro
    private void newAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newAccountMouseClicked
        /* Create and display the form */
        disableComponents();
        RegistrationJInternalFrame registration = new RegistrationJInternalFrame(this);
        registration.setVisible(true);
        
        this.jDesktopPane1.add(registration);

        // Deshabilitar el comportamiento de arrastrar y mover para el RegistrationJInternalFrame
        registration.setBorder(null);
        BasicInternalFrameUI ui = (BasicInternalFrameUI) registration.getUI();
        Component northPane = ui.getNorthPane();
        MouseMotionListener[] motionListeners = (MouseMotionListener[]) northPane.getListeners(MouseMotionListener.class);
        for (MouseMotionListener listener : motionListeners) {
            northPane.removeMouseMotionListener(listener);
    }
        
    }//GEN-LAST:event_newAccountMouseClicked

    
    /*
     * Método para conectarse al servidor.
     * Crea una instancia de Client para establecer la conexión con el servidor.
     * Si ocurre algún error, se mostrará un mensaje en la interfaz gráfica.
     */
    private void connectToServer() {
        try {
            clientSocket = new Client("localhost", 5025);
        } catch (IOException ex) {
            this.alert.setText("Internal error");
        }
    }

    //desabilitar los componentes
    private void disableComponents() {
        // Ocultar los componentes que deseas
        gameTittle.setVisible(false);
        passwordTittle.setVisible(false);
        loggin.setVisible(false);
        userTextField.setVisible(false);
        jPasswordField1.setVisible(false);
        userTittle.setVisible(false);
        register.setVisible(false);
        alert.setVisible(false);
    }

    // Método para mostrar los componentes ocultos
    public void enableComponents() {
        gameTittle.setVisible(true);
        passwordTittle.setVisible(true);
        loggin.setVisible(true);
        userTextField.setText("");
        userTextField.setVisible(true);
        jPasswordField1.setText("");
        jPasswordField1.setVisible(true);
        userTittle.setVisible(true);
        register.setVisible(true);
        alert.setText("");
        alert.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alert;
    private javax.swing.JLabel gameTittle;
    private javax.swing.JLabel image;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel label;
    private java.awt.Button loggin;
    private javax.swing.JLabel passwordTittle;
    private java.awt.Button register;
    private javax.swing.JTextField userTextField;
    private javax.swing.JLabel userTittle;
    // End of variables declaration//GEN-END:variables
}
